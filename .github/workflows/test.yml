name: Running Unit Test, Build Docker Image,  Push To Docker Hub and Deploy To EC2

on:
  pull_request:
    branches:
      - 'main'
  push:
    branches:
      - 'main'

jobs:
  unit-test:
    name: 'unit test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: running unit test
        run: go test ./... -cover

  build-push-docker:
    name: 'Build image and push to registry'
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v2
      # - name: add file config.json
      #   env:
      #     CONFIG_JSON: ${{ secrets.CONFIG_JSON }}
      #   run: echo "$CONFIG_JSON" > config.json
      - name: build docker
        run: docker build -t anggitrestu/elearn:1.0.0 .
      - name: login registry docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Push to Docker Hub
        run: docker push anggitrestu/elearn:1.0.0

  deployment-ec2:
    name: 'Deploy to ec2 from registry docker hub'
    runs-on: ubuntu-latest
    needs: build-push-docker
    steps:
      - uses: actions/checkout@v2
      - name: configuration SSH
        env:
          SSH_USER: ${{ secrets.SSH_NAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/Ojolali.pem
          chmod 400 ~/.ssh/Ojolali.pem
          cat >>~/.ssh/config <<END
          Host development
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/Ojolali.pem
            StrictHostKeyChecking=no
          END
      - name: Connect EC2 & Remove All Container & Pull from Registry & Start
        run: ssh development 'docker rm -f $(docker ps -a -q) && docker pull anggitrestu/elearn:1.0.0 && docker run -d -p 8080:8080 --name elearn_container anggitrestu/elearn:1.0.0'
